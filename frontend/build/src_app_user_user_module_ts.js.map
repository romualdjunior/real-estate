{"version":3,"file":"src_app_user_user_module_ts.js","mappings":"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","sources":["./src/app/shared/enums/notification.ts","./src/app/user/auth-guest.guard.ts","./src/app/user/auth.guard.ts","./src/app/user/change-password/change-password.component.ts","./src/app/user/notifications/notifications.component.ts","./src/app/user/profile/profile.component.ts","./src/app/user/register/register.component.ts","./src/app/user/signin/signin.component.ts","./src/app/user/user-routing.module.ts","./src/app/user/user.module.ts","./src/app/user/user.page.ts"],"sourcesContent":["export enum NotificationType {\r\n  enquiry = 'enquiry',\r\n  property = 'property',\r\n  app = 'app',\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuestGuard implements CanActivate {\r\n  constructor(private user: UserService, private router: Router) { }\r\n  async canActivate() {\r\n    const user = this.user.user;\r\n    // if user is guest in\r\n    if (!user) {\r\n      this.router.navigate(['/map']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private user: UserService, private router: Router) { }\r\n  async canActivate() {\r\n    const user = this.user.user;\r\n    // if user is signed in\r\n    if (!!user) {\r\n      this.router.navigate(['/map']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CustomValidatorsDirective } from 'src/app/shared/directives/custom-validators.directive';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.scss'],\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  public error = false;\r\n  public changePassForm: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder, private customValidators: CustomValidatorsDirective) {\r\n    this.changePassForm = this.fb.group({\r\n      passwordCurrent: ['', Validators.required],\r\n      passwordNew: ['', [\r\n        Validators.required,\r\n        Validators.minLength(8),\r\n        this.customValidators.patternValidator(/\\d/, { hasNumber: true }),\r\n        this.customValidators.patternValidator(/[A-Z]/, { hasCapitalCase: true }),\r\n        this.customValidators.patternValidator(/[a-z]/, { hasSmallCase: true }),\r\n        this.customValidators.patternValidator(/[!@#$%^&*(),.?\":{}|<>]/, { hasSpecialCharacters: true })\r\n      ]],\r\n      passwordConfirm: ['', [\r\n        Validators.required,\r\n        Validators.minLength(8),\r\n        this.customValidators.patternValidator(/\\d/, { hasNumber: true }),\r\n        this.customValidators.patternValidator(/[A-Z]/, { hasCapitalCase: true }),\r\n        this.customValidators.patternValidator(/[a-z]/, { hasSmallCase: true }),\r\n        this.customValidators.patternValidator(/[!@#$%^&*(),.?\":{}|<>]/, { hasSpecialCharacters: true })\r\n      ]],\r\n    });\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  public submit() {\r\n    if (this.changePassForm.invalid) {\r\n      this.error = true;\r\n      return;\r\n    }\r\n    console.log(this.changePassForm.value);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NotificationType } from 'src/app/shared/enums/notification';\r\nimport { Notification } from 'src/app/shared/interface/notification';\r\n\r\n@Component({\r\n  selector: 'app-notifications',\r\n  templateUrl: './notifications.component.html',\r\n  styleUrls: ['./notifications.component.scss'],\r\n})\r\nexport class NotificationsComponent implements OnInit {\r\n\r\n  public notifications: Notification[] = [\r\n    {\r\n      id: '01',\r\n      title: 'Property have been added.',\r\n      type: 'property',\r\n      date: new Date()\r\n    },\r\n    {\r\n      id: '02',\r\n      title: 'Property have been added.',\r\n      type: 'property',\r\n      date: new Date()\r\n    },\r\n    {\r\n      id: '03',\r\n      title: 'Test@email.com have have sent you enquiries',\r\n      type: 'enquiry',\r\n      date: new Date('2021/8/6')\r\n    },\r\n    {\r\n      id: '04',\r\n      title: 'Success, your Email have been verified!!!',\r\n      type: 'app',\r\n      date: new Date('2021/8/5')\r\n    },\r\n    {\r\n      id: '05',\r\n      title: 'Welcome friend, Account created',\r\n      type: 'app',\r\n      date: new Date('2021/8/5')\r\n    }\r\n  ];\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n  itemClicked() {\r\n    console.log('item is clicked');\r\n  }\r\n\r\n  getItemBadge(type: string) {\r\n    switch (type) {\r\n      case NotificationType.enquiry:\r\n        return 'secondary';\r\n      case NotificationType.property:\r\n        return 'success';\r\n      default:\r\n        return 'primary';\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { User } from 'src/app/shared/interface/user';\r\nimport { UserService } from '../user.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss'],\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  public imgUrl: any = './assets/images/avatar.png';\r\n  public user: User;\r\n  constructor(private userService: UserService) {\r\n    this.userService.user$.subscribe(data => this.user = data);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  public toggleUpload() {\r\n    const input = document.getElementById('image-upload');\r\n    input.click();\r\n  }\r\n\r\n  public onSelectFile(event) { // called each time file input changes\r\n    if (event.target.files && event.target.files[0]) {\r\n      const reader = new FileReader();\r\n\r\n      reader.readAsDataURL(event.target.files[0]); // read file as data url\r\n\r\n      reader.onload = (ev) => { // called once readAsDataURL is completed\r\n        this.imgUrl = ev.target.result;\r\n        console.log(this.imgUrl);\r\n      };\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastController, LoadingController } from '@ionic/angular';\r\nimport { CustomValidatorsDirective } from 'src/app/shared/directives/custom-validators.directive';\r\nimport { UserService } from '../user.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  public error = false;\r\n  public registerForm: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private customValidators: CustomValidatorsDirective,\r\n    private toastCtrl: ToastController,\r\n    private loadingController: LoadingController,\r\n    private router: Router,\r\n    private user: UserService\r\n  ) {\r\n    this.registerForm = this.fb.group({\r\n      fullName: ['', [Validators.required, Validators.minLength(4)]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [\r\n        Validators.required,\r\n        Validators.minLength(8),\r\n        this.customValidators.patternValidator(/\\d/, { hasNumber: true }),\r\n        this.customValidators.patternValidator(/[A-Z]/, { hasCapitalCase: true }),\r\n        this.customValidators.patternValidator(/[a-z]/, { hasSmallCase: true }),\r\n        this.customValidators.patternValidator(/[!@#$%^&*(),.?\":{}|<>]/, { hasSpecialCharacters: true })\r\n      ]],\r\n      confirm: ['', Validators.required],\r\n      termService: [false, Validators.required]\r\n    }, {\r\n      validators: this.customValidators.isDifferent('password', 'confirm', 'notConfirmed')\r\n    });\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  public async submit() {\r\n    if (this.registerForm.invalid) {\r\n      this.error = true;\r\n      return;\r\n    }\r\n    const loading = await this.presentLoading();\r\n    loading.present();\r\n    setTimeout(async () => {\r\n      const { fullName, email, password } = this.registerForm.value;\r\n      const result = await this.user.register(fullName, email, password);\r\n      if (!result.error) {\r\n        loading.dismiss();\r\n        await this.showToast('Success, registration is complete.');\r\n        await this.router.navigateByUrl('/user/account/profile');\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n\r\n  private async presentLoading() {\r\n    return await this.loadingController.create({\r\n      cssClass: 'my-custom-class',\r\n      message: 'Please wait...',\r\n    });\r\n  }\r\n\r\n  private async showToast(message: string, color = 'success') {\r\n    const toast = await this.toastCtrl.create({\r\n      message,\r\n      duration: 2000,\r\n      color\r\n    });\r\n    toast.present();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LoadingController, Platform, ToastController } from '@ionic/angular';\r\nimport { GoogleAuthResponse } from 'src/app/shared/interface/google';\r\nimport { environment } from 'src/environments/environment';\r\nimport { UserService } from '../user.service';\r\n// CDN - https://accounts.google.com/gsi/client\r\ndeclare let google: any;\r\n\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.scss'],\r\n})\r\nexport class SigninComponent implements OnInit {\r\n  public error = false;\r\n  public authFailed = false;\r\n  public signinForm: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private user: UserService,\r\n    private toastCtrl: ToastController,\r\n    public loadingController: LoadingController,\r\n    private router: Router,\r\n    public platform: Platform\r\n  ) {\r\n    this.signinForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!this.platform.is('capacitor')) {\r\n      this.initializeGoogleSigninWeb();\r\n    }\r\n  }\r\n\r\n  public async submit() {\r\n    if (this.signinForm.invalid) {\r\n      this.error = true;\r\n      return;\r\n    }\r\n    const loading = await this.presentLoading();\r\n    loading.present();\r\n    const { email, password } = this.signinForm.value;\r\n    const errMssg = 'Something went wrong, try again later.';\r\n    try {\r\n      const result = await this.user.signIn(email, password);\r\n      await loading.dismiss();\r\n      if (result.error) {\r\n        await this.showToast(result.error.message || errMssg, 'danger');\r\n        return;\r\n      }\r\n      await this.showToast('Success, You are logged in');\r\n      this.router.navigateByUrl('/map');\r\n    } catch (error) {\r\n      await loading.dismiss();\r\n      await this.showToast(errMssg, 'danger');\r\n    }\r\n  }\r\n\r\n  private initializeGoogleSigninWeb() {\r\n    google.accounts.id.initialize({\r\n      client_id: environment.api.googleAuthClientId,\r\n      callback: this.handleCredentialResponse.bind(this),\r\n      auto_select: false,\r\n      cancel_on_tap_outside: true,\r\n    });\r\n    google.accounts.id.renderButton(document.getElementById('web-google-button'), {\r\n      theme: 'outline',\r\n      size: 'large',\r\n      width: '330px',\r\n    });\r\n    google.accounts.id.prompt(async (notification: unknown) => {\r\n      console.log(notification);\r\n    });\r\n  }\r\n\r\n  private async handleCredentialResponse(response: GoogleAuthResponse) {\r\n    // Here will be your response from Google.\r\n    const loading = await this.presentLoading();\r\n    loading.present();\r\n    const user = await this.user.googleAuth(response);\r\n    if (user) {\r\n      await this.showToast('Success, You are logged in');\r\n      this.router.navigateByUrl('/map');\r\n      loading.dismiss();\r\n    }\r\n  }\r\n\r\n  private async presentLoading() {\r\n    return await this.loadingController.create({\r\n      cssClass: 'my-custom-class',\r\n      message: 'Please wait...',\r\n    });\r\n  }\r\n\r\n  private async showToast(message, color = 'success') {\r\n    const toast = await this.toastCtrl.create({\r\n      message,\r\n      duration: 2000,\r\n      color,\r\n    });\r\n    toast.present();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuestGuard } from './auth-guest.guard';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { NotificationsComponent } from './notifications/notifications.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { SigninComponent } from './signin/signin.component';\r\n\r\nimport { UserPage } from './user.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: '/user/account',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'account',\r\n    component: UserPage,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: '/user/account/profile',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'profile',\r\n        component: ProfileComponent\r\n      },\r\n      {\r\n        path: 'change-password',\r\n        component: ChangePasswordComponent\r\n      },\r\n      {\r\n        path: 'notifications',\r\n        component: NotificationsComponent\r\n      },\r\n    ],\r\n    canActivate: [AuthGuestGuard]\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: RegisterComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'signin',\r\n    component: SigninComponent,\r\n    canActivate: [AuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UserPageRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { UserPageRoutingModule } from './user-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { UserPage } from './user.page';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { NotificationsComponent } from './notifications/notifications.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    UserPageRoutingModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    UserPage,\r\n    RegisterComponent,\r\n    SigninComponent,\r\n    ChangePasswordComponent,\r\n    ProfileComponent,\r\n    NotificationsComponent\r\n  ]\r\n})\r\nexport class UserPageModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.page.html',\r\n  styleUrls: ['./user.page.scss'],\r\n})\r\nexport class UserPage implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}